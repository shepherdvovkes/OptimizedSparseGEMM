#!/usr/bin/env bash

# Bash script to reinitialize the repository and push to GitHub
# Reads Git configuration if available and uses a specific SSH key for push
# Supports SSH with Ed25519 key (~/.ssh/id_ed25519_work) or HTTPS with PAT
# Repository: shepherdvovkes/OptimizedSparseGEMM

# Usage:
# 1) Ensure SSH public key (~/.ssh/id_ed25519_work.pub) is added to GitHub OR
# 2) Export GITHUB_TOKEN with a PAT that has repo scope:
#    export GITHUB_TOKEN="<your_token>"

# Navigate to project root
dir=$(cd "$(dirname "$0")" && pwd)
cd "$dir"

# 1) Remove any existing Git repository
echo "Cleaning up old Git data..."
[ -d .git ] && rm -rf .git

# 2) Initialize new Git repository
echo "Initializing Git repository..."
git init

# 3) Configure user identity if not already set
existing_name=$(git config --get user.name)
existing_email=$(git config --get user.email)
if [ -z "$existing_name" ] || [ -z "$existing_email" ]; then
  echo "Setting Git user identity..."
  git config user.name "shepherdvovkes"
  git config user.email "shepherdvovkes@icloud.com"
else
  echo "Using existing Git user: $existing_name <$existing_email>"
fi

# 4) Determine remote URL or add if missing
remote_url=$(git config --get remote.origin.url)
if [ -z "$remote_url" ]; then
  if [ -n "$GITHUB_TOKEN" ]; then
    remote_url="https://${GITHUB_TOKEN}@github.com/shepherdvovkes/OptimizedSparseGEMM.git"
    echo "Using HTTPS remote with PAT authentication"
  else
    remote_url="git@github.com:shepherdvovkes/OptimizedSparseGEMM.git"
    echo "Using SSH remote; will use Ed25519 key ~/.ssh/id_ed25519_work"
  fi
  git remote add origin "$remote_url"
else
  echo "Existing remote found: $remote_url"
fi

# 5) Stage files and commit changes
echo "Adding files and creating commit..."
git add .
git commit -m "Reinitialize repository: initial commit of project files"

# 6) Push to GitHub main branch
echo "Pushing to GitHub main branch..."

if [ -n "$GITHUB_TOKEN" ]; then
  # HTTPS push
  git branch -M main
  git push -u origin main
else
  # SSH push with specific key (~/.ssh/id_ed25519_work)
  GIT_SSH_COMMAND="ssh -i /Users/vovkes/.ssh/id_ed25519_work -o IdentitiesOnly=yes" \
    git branch -M main && \
    git push -u origin main
fi

# 7) Cleanup remote URL if token was used
github_clean="https://github.com/shepherdvovkes/OptimizedSparseGEMM.git"
if [[ "$remote_url" == https://*${GITHUB_TOKEN}@* ]]; then
  git remote set-url origin "$github_clean"
fi

echo "Done: Repository reinitialized and pushed. Remote used: ${remote_url}"
